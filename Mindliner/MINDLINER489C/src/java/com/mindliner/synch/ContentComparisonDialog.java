/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mindliner.synch;

import com.mindliner.clientobjects.mlcObject;
import com.mindliner.entities.Syncher;
import com.mindliner.entities.Syncher.SynchConflictResolution;
import com.mindliner.synchronization.foreign.ForeignObject;
import java.text.SimpleDateFormat;
import java.util.ResourceBundle;

/**
 * This class lets the user compare the contents of two items to be synched in
 * case of a conflict or expected duplication.
 *
 * @author Marius Messerli
 */
public class ContentComparisonDialog extends javax.swing.JDialog {

    public enum ComparisonMode {

        CheckSimilarity,
        ChooseWinner
    }
    private boolean objectSimilarity = false;
    private Syncher.SynchConflictResolution conflictResolution = Syncher.SynchConflictResolution.Manual;

    /**
     * Creates new form ContentComparisonDialog
     */
    public ContentComparisonDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        MindlinerTextEditor.setEditable(false);
        ForeignTextEditor.setEditable(false);
    }

    public boolean isObjectSimilarity() {
        return objectSimilarity;
    }

    private void setMode(ComparisonMode mode) {
        ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/mindliner/resources/GUIElements");
        
        switch (mode) {
            case CheckSimilarity:
                MindlinerWinsButton.setVisible(false);
                ForeignWinsButton.setVisible(false);
                ManualResolutionButton.setVisible(false);
                SimilarObjectsButton.setVisible(true);
                DifferentObjectsButton.setVisible(true);
                setTitle(bundle.getString("ContentComparisonDialogTitleComparisonMode"));                
                break;

            case ChooseWinner:
                MindlinerWinsButton.setVisible(true);
                ForeignWinsButton.setVisible(true);
                ManualResolutionButton.setVisible(true);
                SimilarObjectsButton.setVisible(false);
                DifferentObjectsButton.setVisible(false);
                setTitle(bundle.getString("ContentComparisonDialogTitleConflictMode"));
                break;

            default:
                throw new AssertionError();
        }
    }

    public void promptUser() {
        if (!RememberDecisionCB.isSelected()) {
            setVisible(true);
        }
    }

    public void setComparisonContent(mlcObject mo, ForeignObject fo, ComparisonMode mode) {
        String newline = System.getProperty("line.separator");
        StringBuilder sb = new StringBuilder();
        sb.append("ID: ").append(mo.getId()).append(newline);
        sb.append("Mod: ").append((new SimpleDateFormat().format(mo.getModificationDate()))).append(newline);
        sb.append("Owner: ").append(mo.getOwner().getLoginName()).append(newline);
        sb.append("Head: ").append(mo.getHeadline()).append(newline);
        sb.append("Desc: ").append(mo.getDescription());
        MindlinerTextEditor.setText(sb.toString());

        sb = new StringBuilder();
        sb.append("ID: ").append(fo.getId()).append(newline);
        sb.append("Mod: ").append((new SimpleDateFormat().format(fo.getModificationDate()))).append(newline);
        sb.append("Owner: ").append(fo.getOwnerName()).append(newline);
        sb.append("Head: ").append(fo.getHeadline()).append(newline);
        sb.append("Desc: ").append(fo.getDescription());
        ForeignTextEditor.setText(sb.toString());
        setMode(mode);
    }

    public SynchConflictResolution getConflictResolution() {
        return conflictResolution;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        MindlinerTextEditor = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        ForeignTextEditor = new javax.swing.JEditorPane();
        MindlinerSignatureLabel = new javax.swing.JLabel();
        ForeignSignatureLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        SimilarObjectsButton = new javax.swing.JButton();
        ManualResolutionButton = new javax.swing.JButton();
        DifferentObjectsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        RememberDecisionCB = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        ForeignWinsButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        MindlinerWinsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setModal(true);

        jScrollPane1.setViewportView(MindlinerTextEditor);

        jScrollPane2.setViewportView(ForeignTextEditor);

        MindlinerSignatureLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/mindliner/resources/GUIElements"); // NOI18N
        MindlinerSignatureLabel.setText(bundle.getString("ContentComparisonMindlinerTitle")); // NOI18N

        ForeignSignatureLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ForeignSignatureLabel.setText(bundle.getString("ForeignObjectTitle")); // NOI18N

        SimilarObjectsButton.setText(bundle.getString("ContentComparisonSimilarButton")); // NOI18N
        SimilarObjectsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimilarObjectsButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SimilarObjectsButton);

        ManualResolutionButton.setText(bundle.getString("ContentComparisonManual")); // NOI18N
        ManualResolutionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManualResolutionButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ManualResolutionButton);

        DifferentObjectsButton.setText(bundle.getString("ContentComparisonDifferentObjects")); // NOI18N
        DifferentObjectsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DifferentObjectsButtonActionPerformed(evt);
            }
        });
        jPanel1.add(DifferentObjectsButton);

        RememberDecisionCB.setText(bundle.getString("ContentComparisonRememberDecisionCB")); // NOI18N
        jPanel2.add(RememberDecisionCB);

        ForeignWinsButton.setText(bundle.getString("ContentComparisonForeignWinsButton")); // NOI18N
        ForeignWinsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForeignWinsButtonActionPerformed(evt);
            }
        });
        jPanel3.add(ForeignWinsButton);

        MindlinerWinsButton.setText(bundle.getString("ContentComparisonMLWinsButton")); // NOI18N
        MindlinerWinsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MindlinerWinsButtonActionPerformed(evt);
            }
        });
        jPanel4.add(MindlinerWinsButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(MindlinerSignatureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ForeignSignatureLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MindlinerSignatureLabel)
                    .addComponent(ForeignSignatureLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MindlinerWinsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MindlinerWinsButtonActionPerformed
        conflictResolution = Syncher.SynchConflictResolution.MindlinerWins;
        setVisible(false);
    }//GEN-LAST:event_MindlinerWinsButtonActionPerformed

    private void ForeignWinsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForeignWinsButtonActionPerformed
        conflictResolution = Syncher.SynchConflictResolution.ForeignWins;
        setVisible(false);
    }//GEN-LAST:event_ForeignWinsButtonActionPerformed

    private void ManualResolutionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManualResolutionButtonActionPerformed
        conflictResolution = Syncher.SynchConflictResolution.Manual;
        setVisible(false);
    }//GEN-LAST:event_ManualResolutionButtonActionPerformed

    private void SimilarObjectsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimilarObjectsButtonActionPerformed
        objectSimilarity = true;
        setVisible(false);
    }//GEN-LAST:event_SimilarObjectsButtonActionPerformed

    private void DifferentObjectsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DifferentObjectsButtonActionPerformed
        objectSimilarity = false;
        setVisible(false);
    }//GEN-LAST:event_DifferentObjectsButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DifferentObjectsButton;
    private javax.swing.JLabel ForeignSignatureLabel;
    private javax.swing.JEditorPane ForeignTextEditor;
    private javax.swing.JButton ForeignWinsButton;
    private javax.swing.JButton ManualResolutionButton;
    private javax.swing.JLabel MindlinerSignatureLabel;
    private javax.swing.JEditorPane MindlinerTextEditor;
    private javax.swing.JButton MindlinerWinsButton;
    private javax.swing.JCheckBox RememberDecisionCB;
    private javax.swing.JButton SimilarObjectsButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
