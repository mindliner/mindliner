/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mindliner.gui;

import com.mindliner.exceptions.ExportException;
import com.mindliner.exporter.MlExporter;
import com.mindliner.exporter.PowerpointExporter;
import com.mindliner.prefs.FileLocationPreferences;
import java.io.File;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import com.mindliner.clientobjects.MlMapNode;

/**
 *
 * @author Dominic Plangger
 */
public class PowerpointExportPanel extends javax.swing.JPanel {
        private static final String POWERPOINT_EXPORT_DIRECTORY_KEY = "pptexportloc";
    private PowerpointExportDialog dialog = null; //surrounding dialog
    private List<MlMapNode> nodes = null;
            

    public void setDialog(PowerpointExportDialog dialog) {
        this.dialog = dialog;
    }

    public void setNodes(List<MlMapNode> nodes) {
        this.nodes = nodes;
    }
    
    /**
     * Creates new form PowerpointExportPanel
     */
    public PowerpointExportPanel() {
        initComponents();
        configureComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        DescriptionLengthInput = new javax.swing.JFormattedTextField();
        CancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ExportButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        IncludeCheckbox = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BulletsInput = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        BulletsCheckbox = new javax.swing.JCheckBox();

        jLabel1.setText("jLabel1");

        jLabel3.setText("Max. description length");
        jLabel3.setToolTipText("Possibility to truncate descriptions that are too long");

        DescriptionLengthInput.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        DescriptionLengthInput.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        DescriptionLengthInput.setText("0");
        DescriptionLengthInput.setToolTipText("Possibility to truncate descriptions that are too long");
        DescriptionLengthInput.setEnabled(false);

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() | java.awt.Font.BOLD, jLabel2.getFont().getSize()+4));
        jLabel2.setText("Powerpoint Export");

        ExportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mindliner/img/icons/2424/add2-3.png"))); // NOI18N
        ExportButton.setText("Export");
        ExportButton.setBorder(null);
        ExportButton.setPreferredSize(new java.awt.Dimension(93, 33));
        ExportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Include node description");

        IncludeCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncludeCheckboxActionPerformed(evt);
            }
        });

        jLabel5.setText("(0: infinite)");

        jLabel6.setText("Main paragraphs per slide");
        jLabel6.setToolTipText("How many level 0 paragraphs should be placed on one slide");

        BulletsInput.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        BulletsInput.setText("4");
        BulletsInput.setToolTipText("How many level 0 paragraphs should be placed on one slide");

        jLabel7.setText("Bullets for description");
        jLabel7.setToolTipText("Should a bullet be created for description paragraphs?");

        BulletsCheckbox.setSelected(true);
        BulletsCheckbox.setToolTipText("Should a bullet be created for description paragraphs?");
        BulletsCheckbox.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ExportButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CancelButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(BulletsCheckbox)
                                            .addComponent(IncludeCheckbox)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(49, 49, 49)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DescriptionLengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BulletsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ExportButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CancelButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(IncludeCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(BulletsCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(DescriptionLengthInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(BulletsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        dialog.setVisible(false);
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void ExportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportButtonActionPerformed
        dialog.setVisible(false);
        
        final JFileChooser fc = new JFileChooser(FileLocationPreferences.getLocation(POWERPOINT_EXPORT_DIRECTORY_KEY));
        fc.setDialogTitle("Save Powerpoint File");
        fc.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                }

                String s = f.getName();
                return s.endsWith(".pptx");
            }

            @Override
            public String getDescription() {
                return "*.pptx";
            }
        });
        fc.setSelectedFile(new File("Mindliner Powerpoint.pptx"));
        int returnVal = fc.showSaveDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            FileLocationPreferences.setLocation(POWERPOINT_EXPORT_DIRECTORY_KEY, fc.getSelectedFile().getParent());
            long bullets = (Long) BulletsInput.getValue();
            long descrLength = (Long) DescriptionLengthInput.getValue();
            boolean inclDescr = IncludeCheckbox.isSelected();
            boolean bulletsForDescr = BulletsCheckbox.isSelected();
            MlExporter exporter = new PowerpointExporter(inclDescr, descrLength, bullets, bulletsForDescr);
            File f = fc.getSelectedFile();
            try {
                exporter.export(nodes, f);
            } catch (ExportException ex) {
                Logger.getLogger(PowerpointExportPanel.class.getName()).log(Level.SEVERE, "Failed to save exported PPTX", ex);
                JOptionPane.showMessageDialog(null, "Unexpected error during Powerpoint export.", "Powerpoint Export", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_ExportButtonActionPerformed

    private void IncludeCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncludeCheckboxActionPerformed
        DescriptionLengthInput.setEnabled(!DescriptionLengthInput.isEnabled());
        BulletsCheckbox.setEnabled(!BulletsCheckbox.isEnabled());
    }//GEN-LAST:event_IncludeCheckboxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox BulletsCheckbox;
    private javax.swing.JFormattedTextField BulletsInput;
    private javax.swing.JButton CancelButton;
    private javax.swing.JFormattedTextField DescriptionLengthInput;
    private javax.swing.JButton ExportButton;
    private javax.swing.JCheckBox IncludeCheckbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    private void configureComponents() {
        BulletsInput.setValue(4l);
        DescriptionLengthInput.setValue(0l);
    }
}
