/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mindliner.gui;

import com.mindliner.gui.treemodel.ObjectTreeNode;
import com.mindliner.importer.maps.MlPowerpointImporter;
import java.awt.Cursor;
import java.awt.GridLayout;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.hslf.model.Slide;
import org.apache.poi.hslf.usermodel.SlideShow;
import org.apache.poi.xslf.usermodel.XMLSlideShow;
import org.apache.poi.xslf.usermodel.XSLFSlide;

/**
 * Content of the first import dialog which displays all available slides. The
 * user can select which slides to import. Each slide preview corresponds to one
 * PowerpointImportSlidePanel.
 *
 * @author Dominic Plangger
 */
public class PowerpointImportPanel extends javax.swing.JPanel {

    private XMLSlideShow xmlSlideShow = null;
    private SlideShow slideShow = null;
    private PowerpointImportDialog dialog = null; //surrounding dialog
    private MlPowerpointImporter importer = null;
    private List<PowerpointImportSlidePanel> panels = new ArrayList<PowerpointImportSlidePanel>();
    private boolean isXmlPpt = false;

    /**
     * Creates new form PowerpointImportPanel
     */
    public PowerpointImportPanel() {
        initComponents();
    }

    public void setXmlSlideShow(XMLSlideShow slideShow) {
        this.xmlSlideShow = slideShow;
        isXmlPpt = true;
        updateSlides();
    }

    public void setSlideShow(SlideShow slideShow) {
        this.slideShow = slideShow;
        updateSlides();
    }

    public void setDialog(PowerpointImportDialog dialog) {
        this.dialog = dialog;
    }

    public void setImporter(MlPowerpointImporter importer) {
        this.importer = importer;
    }

    private void updateSlides() {
        panels.clear();
        int l = isXmlPpt ? xmlSlideShow.getSlides().length : slideShow.getSlides().length;
        GridLayout gl = (GridLayout) SlidePanel.getLayout();
        gl.setRows((int) Math.ceil((double) l / 4d));

        for (int i = 0; i < l; i++) {
            PowerpointImportSlidePanel p = new PowerpointImportSlidePanel();
            if (isXmlPpt) {
                XSLFSlide slide = xmlSlideShow.getSlides()[i];
                p.setXmlSlide(slide, i);
            } else {
                Slide slide = slideShow.getSlides()[i];
                p.setSlide(slide, i);
            }
            SlidePanel.add(p);
            panels.add(p);
        }

        SlidePanel.invalidate();
        SlidePanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitlePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NextButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SlidePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        RangeStart = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        RangeEnd = new javax.swing.JFormattedTextField();
        SelectAllButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        RangeApplyButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        TitlePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel1.setText("Powerpoint Import");

        NextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mindliner/img/icons/1616/navigate_right.png"))); // NOI18N
        NextButton.setText("Next");
        NextButton.setBorder(null);
        NextButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        NextButton.setPreferredSize(new java.awt.Dimension(93, 33));
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/mindliner/resources/GUIElements"); // NOI18N
        jLabel4.setText(bundle.getString("PowerpointImportSlidesLabel")); // NOI18N

        javax.swing.GroupLayout TitlePanelLayout = new javax.swing.GroupLayout(TitlePanel);
        TitlePanel.setLayout(TitlePanelLayout);
        TitlePanelLayout.setHorizontalGroup(
            TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TitlePanelLayout.createSequentialGroup()
                .addGroup(TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        TitlePanelLayout.setVerticalGroup(
            TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TitlePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TitlePanelLayout.createSequentialGroup()
                        .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SlidePanel.setLayout(new java.awt.GridLayout(2, 4));
        jScrollPane1.setViewportView(SlidePanel);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel2.setText("Range from");

        RangeStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        RangeStart.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        RangeStart.setText("1");
        RangeStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RangeStartActionPerformed(evt);
            }
        });

        jLabel3.setText("to");

        RangeEnd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        RangeEnd.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        RangeEnd.setText("1");

        SelectAllButton.setText("Select All");
        SelectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAllButtonActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        RangeApplyButton.setText("Apply");
        RangeApplyButton.setMargin(new java.awt.Insets(2, 5, 2, 5));
        RangeApplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RangeApplyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RangeStart, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RangeEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RangeApplyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                .addComponent(SelectAllButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClearButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SelectAllButton)
                        .addComponent(ClearButton))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(RangeStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(RangeEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RangeApplyButton)))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TitlePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(TitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SelectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAllButtonActionPerformed
        for (PowerpointImportSlidePanel p : panels) {
            p.setSelected(true);
        }
    }//GEN-LAST:event_SelectAllButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        for (PowerpointImportSlidePanel p : panels) {
            p.setSelected(false);
        }
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void RangeApplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RangeApplyButtonActionPerformed
        try {
            RangeStart.commitEdit();
            RangeEnd.commitEdit();
        } catch (ParseException ex) {
            RangeStart.setValue(1);
            RangeEnd.setValue(1);
        }
        long start = (Long) RangeStart.getValue() - 1;
        long end = (Long) RangeEnd.getValue() - 1;

        if (start < end && start >= 0 && end >= 0) {
            for (int i = 0; i < panels.size(); i++) {
                PowerpointImportSlidePanel p = panels.get(i);
                if (i >= start && i <= end) {
                    p.setSelected(true);
                } else {
                    p.setSelected(false);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter valid range", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_RangeApplyButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        dialog.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        List slides = new ArrayList();
        List<Integer> indices = new ArrayList<>();
        for (int i = 0; i < panels.size(); i++) {
            PowerpointImportSlidePanel p = panels.get(i);
            if (p.isSelected()) {
                slides.add(isXmlPpt ? p.getXmlSlide() : p.getSlide());
                indices.add(i);
            }
        }
        ObjectTreeNode tree = null;
        try {
            tree = importer.parseSlides(slides, indices);
        } catch (Exception ex) {
            Logger.getLogger(PowerpointImportPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Failed to import Powerpoint file.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } finally {
            dialog.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            dialog.setVisible(false);
        }
        // parseSlides

        PowerpointTreePanel treePanel = new PowerpointTreePanel();
        treePanel.setTree(tree);
        PowerpointTreeDialog treeDialog = new PowerpointTreeDialog(treePanel);
        treeDialog.setVisible(true);
    }//GEN-LAST:event_NextButtonActionPerformed

    private void RangeStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RangeStartActionPerformed
        int start = Integer.parseInt(RangeStart.getText());
        if (start < 1) {
            JOptionPane.showMessageDialog(null, "The slide number starts with 1.", "Invalid Start Slide Number", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RangeStartActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton NextButton;
    private javax.swing.JButton RangeApplyButton;
    private javax.swing.JFormattedTextField RangeEnd;
    private javax.swing.JFormattedTextField RangeStart;
    private javax.swing.JButton SelectAllButton;
    private javax.swing.JPanel SlidePanel;
    private javax.swing.JPanel TitlePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

}
